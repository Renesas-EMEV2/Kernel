/*
 *  File Name  : emxx_gt2005.h
 *  Version:  0.1
*/

#ifndef GT2005_H
#define GT2005_H

struct sensor_reg {
	unsigned short reg;
	unsigned char val;
};

static struct sensor_reg sensor_initialize[] = {

{0x0101 , 0x00},	{0x0103 , 0x00},	
	//Hcount&Vcount
	{0x0105 , 0x00},	{0x0106 , 0xF0},	{0x0107 , 0x00},	{0x0108 , 0x1C},

	//Binning&Resoultion
	{0x0109 , 0x01},	{0x010A , 0x00},	{0x010B , 0x00},	{0x010C , 0x00},
	{0x010D , 0x08},	{0x010E , 0x00},	{0x010F , 0x08},	{0x0110 , 0x06},
	{0x0111 , 0x40},	{0x0112 , 0x04},	{0x0113 , 0xB0},
	//YUV Mode
	{0x0114 , 0x00},	// YUV422
	//{0x0114 , 0x06},	// YUV422
	//{0x0114 , 0x02},	// YUV422
	//Picture Effect
	{0x0115 , 0x00},
	//PLL&Frame Rate 12MHz * 1/2 = 24MHz
	{0x0116 , 0x02},	{0x0117 , 0x00},	{0x0118 , /*0x67*/0x40},	{0x0119 , 0x01},
	{0x011A , 0x04},	{0x011B , 0x00},	
	//DCLK Polarity
	{0x011C , 0x00},
	//Do not change
	{0x011D , 0x01},	{0x011E , 0x80},	{0x011F , 0x00},	{0x0120 , 0x1C},
	{0x0121 , 0x00},	{0x0122 , 0x04},	{0x0123 , 0x00},	{0x0124 , 0x00},
	{0x0125 , 0x00},	{0x0126 , 0x00},	{0x0127 , 0x00},	{0x0128 , 0x00},
	//Contrast
	{0x0200 , 0x00},
	//Brightness
	{0x0201 , 0x00},
	//Saturation
	{0x0202 , 0x40},
	//Do not change
	{0x0203 , 0x00},	{0x0204 , 0x03},	{0x0205 , 0x1F},	{0x0206 , 0x0B},
	{0x0207 , 0x20},	{0x0208 , 0x00},	{0x0209 , 0x2A},	{0x020A , 0x01},
	//Sharpness
	{0x020B , 0x48},	{0x020C , 0x64},
	//Do not change
	{0x020D , 0xC8},	{0x020E , 0xBC},	{0x020F , 0x08},	{0x0210 , 0xD6},
	{0x0211 , 0x00},	{0x0212 , 0x20},	{0x0213 , 0x81},	{0x0214 , 0x15},
	{0x0215 , 0x00},	{0x0216 , 0x00},	{0x0217 , 0x00},	{0x0218 , 0x46},
	{0x0219 , 0x30},	{0x021A , 0x03},	{0x021B , 0x28},	{0x021C , 0x02},
	{0x021D , 0x60},	{0x021E , 0x00},	{0x021F , 0x00},	{0x0220 , 0x08},
	{0x0221 , 0x08},	{0x0222 , 0x04},	{0x0223 , 0x00},	{0x0224 , 0x1F},
	{0x0225 , 0x1E},	{0x0226 , 0x18},	{0x0227 , 0x1D},	{0x0228 , 0x1F},
	{0x0229 , 0x1F},	{0x022A , 0x01},	{0x022B , 0x04},	{0x022C , 0x05},
	{0x022D , 0x05},	{0x022E , 0x04},	{0x022F , 0x03},	{0x0230 , 0x02},
	{0x0231 , 0x1F},	{0x0232 , 0x1A},	{0x0233 , 0x19},	{0x0234 , 0x19},
	{0x0235 , 0x1B},	{0x0236 , 0x1F},	{0x0237 , 0x04},	{0x0238 , 0xEE},
	{0x0239 , 0xFF},	{0x023A , 0x00},	{0x023B , 0x00},	{0x023C , 0x00},

	{0x023D , 0x00},	{0x023E , 0x00},	{0x023F , 0x00},	{0x0240 , 0x00},
	{0x0241 , 0x00},	{0x0242 , 0x00},	{0x0243 , 0x21},	{0x0244 , 0x42},
	{0x0245 , 0x53},	{0x0246 , 0x54},	{0x0247 , 0x54},	{0x0248 , 0x54},
	{0x0249 , 0x33},	{0x024A , 0x11},	{0x024B , 0x00},	{0x024C , 0x00},
	{0x024D , 0xFF},	{0x024E , 0xEE},	{0x024F , 0xDD},	{0x0250 , 0x00},
	{0x0251 , 0x00},	{0x0252 , 0x00},	{0x0253 , 0x00},	{0x0254 , 0x00},
	{0x0255 , 0x00},	{0x0256 , 0x00},	{0x0257 , 0x00},	{0x0258 , 0x00},
	{0x0259 , 0x00},	{0x025A , 0x00},	{0x025B , 0x00},	{0x025C , 0x00},
	{0x025D , 0x00},	{0x025E , 0x00},	{0x025F , 0x00},	{0x0260 , 0x00},
	{0x0261 , 0x00},	{0x0262 , 0x00},	{0x0263 , 0x00},	{0x0264 , 0x00},
	{0x0265 , 0x00},	{0x0266 , 0x00},	{0x0267 , 0x00},	{0x0268 , 0x8F},
	{0x0269 , 0xA3},	{0x026A , 0xB4},	{0x026B , 0x90},	{0x026C , 0x00},
	{0x026D , 0xD0},	{0x026E , 0x60},	{0x026F , 0xA0},	{0x0270 , 0x40},
	{0x0300 , 0x81},	{0x0301 , 0x80},	{0x0302 , 0x22},	{0x0303 , 0x06},
	{0x0304 , 0x03},	{0x0305 , 0x83},	{0x0306 , 0x00},	{0x0307 , 0x22},
	{0x0308 , 0x00},	{0x0309 , 0x55},	{0x030A , 0x55},	{0x030B , 0x55},
	{0x030C , 0x54},	{0x030D , 0x1F},	{0x030E , 0x0A},	{0x030F , 0x10},
	{0x0310 , 0x04},	{0x0311 , 0xFF},	{0x0312 , 0x08},	{0x0313 , 0x35},
	{0x0314 , 0x6c},	{0x0315 , 0x96},	{0x0316 , 0x26},	{0x0317 , 0x02},	
	{0x0318 , 0x08},	{0x0319 , 0x0C},


#if 0
	//Normal AWB Setting
	{0x031A , 0x81},	{0x031B , 0x00},	{0x031C , 0x3D},	{0x031D , 0x00},
	{0x031E , 0xF9},	{0x031F , 0x00},	{0x0320 , 0x24},	{0x0321 , 0x14},
	{0x0322 , 0x1A},	{0x0323 , 0x24},	{0x0324 , 0x08},	{0x0325 , 0xF0},
	{0x0326 , 0x30},	{0x0327 , 0x17},	{0x0328 , 0x11},	{0x0329 , 0x22},
	{0x032A , 0x2F},	{0x032B , 0x21},	{0x032C , 0xDA},	{0x032D , 0x10},
	{0x032E , 0xEA},	{0x032F , 0x18},	{0x0330 , 0x29},	{0x0331 , 0x25},
	{0x0332 , 0x12},	{0x0333 , 0x0F},	{0x0334 , 0xE0},	{0x0335 , 0x13},
	{0x0336 , 0xFF},	{0x0337 , 0x20},	{0x0338 , 0x46},	{0x0339 , 0x04},
	{0x033A , 0x04},	{0x033B , 0xFF},	{0x033C , 0x01},	{0x033D , 0x00},
#else	// ELSE__#A_LIGHT_CORRECTION#
	//A LIGHT CORRECTION	
	{0x031A , 0x81},	{0x031B , 0x00},	{0x031C , 0x1D},	{0x031D , 0x00},
	{0x031E , 0xFD},	{0x031F , 0x00},	{0x0320 , 0xE1},	{0x0321 , 0x1A},
	{0x0322 , 0xDE},	{0x0323 , 0x11},	{0x0324 , 0x1A},	{0x0325 , 0xEE},
	{0x0326 , 0x50},	{0x0327 , 0x18},	{0x0328 , 0x25},	{0x0329 , 0x37},
	{0x032A , 0x24},	{0x032B , 0x32},	{0x032C , 0xA9},	{0x032D , 0x32},
	{0x032E , 0xFF},	{0x032F , 0x7F},	{0x0330 , 0xBA},	{0x0331 , 0x7F},
	{0x0332 , 0x7F},	{0x0333 , 0x14},	{0x0334 , 0x81},	{0x0335 , 0x14},
	{0x0336 , 0xFF},	{0x0337 , 0x20},	{0x0338 , 0x46},	{0x0339 , 0x04},
	{0x033A , 0x04},	{0x033B , 0x00},	{0x033C , 0x00},	{0x033D , 0x00},
#endif	// ENDIF__#A_LIGHT_CORRECTION#
	
	//Do not change
	{0x033E , 0x03},	{0x033F , 0x28},	{0x0340 , 0x02},	{0x0341 , 0x60},
	{0x0342 , 0xAC},	{0x0343 , 0x97},	{0x0344 , 0x7F},	{0x0400 , 0xE8},
	{0x0401 , 0x40},	{0x0402 , 0x00},	{0x0403 , 0x00},	{0x0404 , 0xF8},
	{0x0405 , 0x03},	{0x0406 , 0x03},	{0x0407 , 0x85},	{0x0408 , 0x44},
	{0x0409 , 0x1F},	{0x040A , 0x40},	{0x040B , 0x33},	
	//Lens Shading Correction
	{0x040C , 0xA0},	{0x040D , 0x00},	{0x040E , 0x00},	{0x040F , 0x00},
	{0x0410 , 0x0D},	{0x0411 , 0x0D},	{0x0412 , 0x0C},	{0x0413 , 0x04},
	{0x0414 , 0x00},	{0x0415 , 0x00},	{0x0416 , 0x07},	{0x0417 , 0x09},
	{0x0418 , 0x16},	{0x0419 , 0x14},	{0x041A , 0x11},	{0x041B , 0x14},

	{0x041C , 0x07},	{0x041D , 0x07},	{0x041E , 0x06},	{0x041F , 0x02},
	{0x0420 , 0x42},	{0x0421 , 0x42},	{0x0422 , 0x47},	{0x0423 , 0x39},
	{0x0424 , 0x3E},	{0x0425 , 0x4D},	{0x0426 , 0x46},	{0x0427 , 0x3A},
	{0x0428 , 0x21},	{0x0429 , 0x21},	{0x042A , 0x26},	{0x042B , 0x1C},
	{0x042C , 0x25},	{0x042D , 0x25},	{0x042E , 0x28},	{0x042F , 0x20},
	{0x0430 , 0x3E},	{0x0431 , 0x3E},	{0x0432 , 0x33},	{0x0433 , 0x2E},
	{0x0434 , 0x54},	{0x0435 , 0x53},	{0x0436 , 0x3C},	{0x0437 , 0x51},
	{0x0438 , 0x2B},	{0x0439 , 0x2B},	{0x043A , 0x38},	{0x043B , 0x22},
	{0x043C , 0x3B},	{0x043D , 0x3B},	{0x043E , 0x31},	{0x043F , 0x37},
	//PWB Gain
	{0x0440 , 0x00},	{0x0441 , 0x4B},	{0x0442 , 0x00},	{0x0443 , 0x00},
	{0x0444 , 0x31},	{0x0445 , 0x00},	{0x0446 , 0x00},	{0x0447 , 0x00},
	{0x0448 , 0x00},	{0x0449 , 0x00},	{0x044A , 0x00},	{0x044D , 0xE0},
	{0x044E , 0x05},	{0x044F , 0x07},	{0x0450 , 0x00},	{0x0451 , 0x00},
	{0x0452 , 0x00},	{0x0453 , 0x00},	{0x0454 , 0x00},	{0x0455 , 0x00},
	{0x0456 , 0x00},	{0x0457 , 0x00},	{0x0458 , 0x00},	{0x0459 , 0x00},
	{0x045A , 0x00},	{0x045B , 0x00},	{0x045C , 0x00},	{0x045D , 0x00},
	{0x045E , 0x00},	{0x045F , 0x00},
	//GAMMA Correction
	{0x0460 , 0x80},	{0x0461 , 0x10},	{0x0462 , 0x10},	{0x0463 , 0x10},
	{0x0464 , 0x08},	{0x0465 , 0x08},	{0x0466 , 0x11},	{0x0467 , 0x09},
	{0x0468 , 0x23},	{0x0469 , 0x2A},	{0x046A , 0x2A},	{0x046B , 0x47},
	{0x046C , 0x52},	{0x046D , 0x42},	{0x046E , 0x36},	{0x046F , 0x46},
	{0x0470 , 0x3A},	{0x0471 , 0x32},	{0x0472 , 0x32},	{0x0473 , 0x38},
	{0x0474 , 0x3D},	{0x0475 , 0x2F},	{0x0476 , 0x29},	{0x0477 , 0x48},
	//Do not change
	{0x0600 , 0x00},	{0x0601 , 0x24},	{0x0602 , 0x45},	{0x0603 , 0x0E},
	{0x0604 , 0x14},	{0x0605 , 0x2F},	{0x0606 , 0x01},	{0x0607 , 0x0E},
	{0x0608 , 0x0E},	{0x0609 , 0x37},	{0x060A , 0x18},	{0x060B , 0xA0},
	{0x060C , 0x20},	{0x060D , 0x07},	{0x060E , 0x47},	{0x060F , 0x90},
	{0x0610 , 0x06},	{0x0611 , 0x0C},	{0x0612 , 0x28},	{0x0613 , 0x13},
	{0x0614 , 0x0B},	{0x0615 , 0x10},	{0x0616 , 0x14},	{0x0617 , 0x19},
	{0x0618 , 0x52},	{0x0619 , 0xA0},	{0x061A , 0x11},	{0x061B , 0x33},
	{0x061C , 0x56},	{0x061D , 0x20},	{0x061E , 0x28},	{0x061F , 0x2B},
	{0x0620 , 0x22},	{0x0621 , 0x11},	{0x0622 , 0x75},	{0x0623 , 0x49},
	{0x0624 , 0x6E},	{0x0625 , 0x80},	{0x0626 , 0x02},	{0x0627 , 0x0C},
	{0x0628 , 0x51},	{0x0629 , 0x25},	{0x062A , 0x01},	{0x062B , 0x3D},
	{0x062C , 0x04},	{0x062D , 0x01},	{0x062E , 0x0C},	{0x062F , 0x2C},
	{0x0630 , 0x0D},	{0x0631 , 0x14},	{0x0632 , 0x12},	{0x0633 , 0x34},
	{0x0634 , 0x00},	{0x0635 , 0x00},	{0x0636 , 0x00},	{0x0637 , 0xB1},
	{0x0638 , 0x22},	{0x0639 , 0x32},	{0x063A , 0x0E},	{0x063B , 0x18},
	{0x063C , 0x88},	{0x0640 , 0xB2},	{0x0641 , 0xC0},	{0x0642 , 0x01},
	{0x0643 , 0x26},	{0x0644 , 0x13},	{0x0645 , 0x88},	{0x0646 , 0x64},
	{0x0647 , 0x00},	{0x0681 , 0x1B},	{0x0682 , 0xA0},	{0x0683 , 0x28},
	{0x0684 , 0x00},	{0x0685 , 0xB0},	{0x0686 , 0x6F},	{0x0687 , 0x33},
	{0x0688 , 0x1F},	{0x0689 , 0x44},	{0x068A , 0xA8},	{0x068B , 0x44},
	{0x068C , 0x08},	{0x068D , 0x08},	{0x068E , 0x00},	{0x068F , 0x00},
	{0x0690 , 0x01},	{0x0691 , 0x00},	{0x0692 , 0x01},	{0x0693 , 0x00},
	{0x0694 , 0x00},	{0x0695 , 0x00},	{0x0696 , 0x00},	{0x0697 , 0x00},
	{0x0698 , 0x2A},	{0x0699 , 0x80},	{0x069A , 0x1F},	{0x069B , 0x00},
	{0x069C , 0x02},	{0x069D , 0xF5},	{0x069E , 0x03},	{0x069F , 0x6D},
	{0x06A0 , 0x0C},	{0x06A1 , 0xB8},	{0x06A2 , 0x0D},	{0x06A3 , 0x74},
	{0x06A4 , 0x00},	{0x06A5 , 0x2F},	{0x06A6 , 0x00},	{0x06A7 , 0x2F},
	{0x0F00 , 0x00},	{0x0F01 , 0x00},	
	//Output Enable
	{0x0100 , 0x01},	{0x0102 , 0x02},	{0x0104 , 0x03},    


};

//preview of capture
static struct sensor_reg sensor_set_preview[] = {
	// 640 * 480
	{0x0109 , 0x00},	{0x010A , 0x04},	{0x010B , 0x03},	{0x0110 , 0x02},	// 280 * 1E0 640X480
	{0x0111 , 0x80},	{0x0112 , 0x01},	{0x0113 , 0xE0},
	// 1600 * 1200
//	{0x0109 , 0x01},	{0x010A , 0x00},	{0x010B , 0x00},	{0x0110 , 0x06},
//	{0x0111 , 0x40},	{0x0112 , 0x04},	{0x0113 , 0xb0},

	{0x010C , 0x00},	{0x010D , 0xF4},	{0x010E , 0x00},	{0x10F , 0x90},	
	//PLL Setting 18.6FPS Under 48MHz PCLK
	{0x0116 , 0x02},	{0x0118 ,0x40/*0x40*/}, 	{0x0119 , 0x01},	{0x011a , 0x04},

	{0x011B , 0x00},	
	//night mode
	{0x0312 , 0x98},
	//AWB
	{0x031a , 0x81},
	// select Auto WB
	{0x0320 , 0x24},
	//  WBGRMAX[7:0];
	{0x0321 , 0x14},
	//  WBGRMIN[7:0];
	{0x0322 , 0x24},
	//  WBGBMAX[7:0];
	{0x0323 , 0x1a},
	//  WBGBMIN[7:0];
	{0x0441 , 0x4B},
	//  PWBGAINR[7:0];
	{0x0442 , 0x00},
	//  PWBGAINGR[7:0];
	{0x0443 , 0x00},
	//  PWBGAINGB[7:0];
	{0x0444 , 0x31},
	//  PWBGAINB[7:0];
	//ev
	{0x0300 , 0x81},	{0x0301 , 0x80},	{0x0201 , 0x00},
	//effect	
	{0x0115 , 0x00},
	//banding
	{0x0315 , 0x16},        {0x0313 , 0x35},	{0x0314 , 0x6c},
};


static struct sensor_reg sensor_set_cif[] = {

};

static struct sensor_reg sensor_set_capture[] = {

};
//1024x767
static struct sensor_reg size_xga[]={

//Binning&Resoultion
{0x0109 , 0x01},//Fixed the number of lines by VCOUNT setting
{0x010A , 0x00},
{0x010B , 0x00},
{0x010C , 0x00},
{0x010D , 0x08},
{0x010E , 0x00},
{0x010F , 0x08},

{0x0110 , 0x04},
{0x0111 , 0x00},//1024
{0x0112 , 0x03},
{0x0113 , 0x00}, //768 

};
//1600x1200  1122
static struct sensor_reg size_uxga[]={
{0x0109 , 0x01},//Fixed the number of lines by VCOUNT setting
{0x010A , 0x00},
{0x010B , 0x00},
{0x010C , 0x00},
{0x010D , 0x08},
{0x010E , 0x00},
{0x010F , 0x08},

{0x0110 , 0x06},
{0x0111 , 0x40},
{0x0112 , 0x04},
{0x0113 , 0xB0}, // 1600*1200 SETTING
};

static struct sensor_reg auto_focuse_turn_on[] = {

};

static struct sensor_reg auto_focuse_turn_off[] = {

};

static struct sensor_reg fouce_init[]={

};

static struct sensor_reg black_white[]={
 {0x0115,0x06},

};

static struct sensor_reg negative[]={
{0x0115,0x09},
};

static struct sensor_reg normal[]={
{0x0115,0x00},
};

static struct sensor_reg greenish[]={
 {0x0115,0x0a},
 {0x026e,0x20},
 {0x026f,0x00},
};

static struct sensor_reg sepia[]={
 {0x0115,0x0a},
 {0x026e,0x60},
 {0x026f,0xa0},
};

//exposure
static struct sensor_reg low_1_7ev[]={

	//{0x0300 ,0x81},
	//{0x0301 ,0x40},
	{0x0201 ,0x90},
};

static struct sensor_reg low_1_3ev[]={

};

static struct sensor_reg low_1ev[]={

};

static struct sensor_reg low_0_7ev[]={
	//{0x0300 ,0x81},
//	{0x0301 ,0x60},
	{0x0201 ,0xb0},
};

static struct sensor_reg low_0_3ev[]={

};

static struct sensor_reg default_ev[]={
	//{0x0300 ,0x81},
	//{0x0301 ,0x80},
	{0x0201 ,0x00},

};

static struct sensor_reg height_0_3ev[]={

};

static struct sensor_reg height_0_7ev[]={

	//{0x0300 ,0x81},
	//{0x0301 ,0xa0},
	{0x0201 ,0x50},
	
};

static struct sensor_reg height_1ev[]={

};

static struct sensor_reg height_1_3ev[]={

};

static struct sensor_reg height_1_7ev[]={

	//{0x0300 ,0x81},
	//{0x0301 ,0xc0},
	{0x0201 ,0x70},
};

static struct sensor_reg white_blance_auto[]={
	{0x031a , 0x81},
	{0x0320 , 0x24},
	{0x0321 , 0x14},
	{0x0322 , 0x1a},
	{0x0323 , 0x24},
	{0x0441 , 0x4B},
	{0x0442 , 0x00},
	{0x0443 , 0x00},
	{0x0444 , 0x31},
};

static struct sensor_reg sunny[]={
	{0x0320 , 0x02},
	{0x0321 , 0x02},
	{0x0322 , 0x02},
	{0x0323 , 0x02},
	{0x0441 , 0x60},
	{0x0442 , 0x00},
	{0x0443 , 0x00},
	{0x0444 , 0x14},
};

static struct sensor_reg cloudy[]={
	{0x0320 , 0x02},
	{0x0321 , 0x02},
	{0x0322 , 0x02},
	{0x0323 , 0x02},
	{0x0441 , 0x80},
	{0x0442 , 0x00},
	{0x0443 , 0x00},
	{0x0444 , 0x0D},
};

static struct sensor_reg office[]={
	{0x0320 , 0x02},
	{0x0321 , 0x02},
	{0x0322 , 0x02},
	{0x0323 , 0x02},
	{0x0441 , 0x50},
	{0x0442 , 0x00},
	{0x0443 , 0x00},
	{0x0444 , 0x30},

};

static struct sensor_reg home[]={

	{0x0320 , 0x02},
	{0x0321 , 0x02},
	{0x0322 , 0x02},
	{0x0323 , 0x02},
	{0x0441 , 0x43},
	{0x0442 , 0x00},
	{0x0443 , 0x00},
	{0x0444 , 0x4B},
};

//contrast
static struct sensor_reg contrast_2h[]={
{0x0200,0x30},
};
static struct sensor_reg contrast_1h[]={
{0x0200,0x20},
};
static struct sensor_reg contrast_0[]={
{0x0200,0x00},

};
static struct sensor_reg contrast_1l[]={
{0x0200,0xf0},
};
static struct sensor_reg contrast_2l[]={
{0x0200,0xd0},
};

#endif /* GT2005_H */
